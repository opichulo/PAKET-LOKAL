<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistem Paket Lokal</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #25D366, #128C7E);
            color: white;
            padding: 30px;
            text-align: center;
            position: relative;
        }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="20" cy="20" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="80" cy="40" r="3" fill="rgba(255,255,255,0.1)"/><circle cx="40" cy="80" r="1" fill="rgba(255,255,255,0.1)"/></svg>');
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            position: relative;
            z-index: 1;
        }

        .header p {
            font-size: 1.2em;
            opacity: 0.9;
            position: relative;
            z-index: 1;
        }

        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            padding: 30px;
        }

        .form-section, .orders-section {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(37, 211, 102, 0.1);
        }

        .section-header {
            color: #128C7E;
            font-size: 1.5em;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 600;
        }

        .form-group input, .form-group select, .form-group textarea {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .form-group input:focus, .form-group select:focus, .form-group textarea:focus {
            outline: none;
            border-color: #25D366;
            background: white;
            box-shadow: 0 0 0 3px rgba(37, 211, 102, 0.1);
        }

        .btn {
            background: linear-gradient(135deg, #25D366, #128C7E);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin-top: 10px;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(37, 211, 102, 0.3);
        }

        .btn:active {
            transform: translateY(0);
        }

        .order-item {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 15px;
            border-left: 4px solid #25D366;
            transition: all 0.3s ease;
        }

        .order-item:hover {
            transform: translateX(5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .order-id {
            font-weight: bold;
            color: #128C7E;
            font-size: 1.1em;
        }

        .status {
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status.pending {
            background: #fff3cd;
            color: #856404;
        }

        .status.pickup {
            background: #d4edda;
            color: #155724;
        }

        .status.delivered {
            background: #d1ecf1;
            color: #0c5460;
        }

        .order-details {
            color: #666;
            line-height: 1.6;
        }

        .whatsapp-section {
            grid-column: 1 / -1;
            background: linear-gradient(135deg, #25D366, #128C7E);
            color: white;
            border-radius: 15px;
            padding: 25px;
            text-align: center;
        }

        .wa-btn {
            background: white;
            color: #25D366;
            border: none;
            padding: 15px 30px;
            border-radius: 50px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 0 10px;
            display: inline-flex;
            align-items: center;
            gap: 10px;
        }

        .wa-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(255, 255, 255, 0.3);
        }

        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 12px;
            text-align: center;
            backdrop-filter: blur(10px);
        }

        .stat-number {
            font-size: 2em;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-label {
            opacity: 0.9;
        }

        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
                gap: 20px;
                padding: 20px;
            }
            
            .header h1 {
                font-size: 2em;
            }
            
            .container {
                margin: 10px;
                border-radius: 15px;
            }
        }

        .icon {
            width: 24px;
            height: 24px;
            fill: currentColor;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üì¶ Sistem Paket Lokal</h1>
            <p>Kelola pengiriman paket dengan mudah melalui WhatsApp</p>
        </div>

        <div class="main-content">
            <div class="form-section">
                <div class="section-header">
                    <span>üìù</span>
                    <span>Buat Pesanan Baru</span>
                </div>
                
                <form id="orderForm">
                    <div class="form-group">
                        <label for="senderName">Nama Pengirim</label>
                        <input type="text" id="senderName" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="senderPhone">No. HP Pengirim</label>
                        <input type="tel" id="senderPhone" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="recipientName">Nama Penerima</label>
                        <input type="text" id="recipientName" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="recipientPhone">No. HP Penerima</label>
                        <input type="tel" id="recipientPhone" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="pickupAddress">Alamat Penjemputan</label>
                        <textarea id="pickupAddress" rows="3" required></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="deliveryAddress">Alamat Tujuan</label>
                        <textarea id="deliveryAddress" rows="3" required></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="packageType">Jenis Paket</label>
                        <select id="packageType" required>
                            <option value="">Pilih Jenis Paket</option>
                            <option value="dokumen">Dokumen</option>
                            <option value="pakaian">Pakaian</option>
                            <option value="makanan">Makanan</option>
                            <option value="elektronik">Elektronik</option>
                            <option value="lainnya">Lainnya</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="notes">Catatan Khusus</label>
                        <textarea id="notes" rows="2" placeholder="Opsional"></textarea>
                    </div>
                    
                    <button type="submit" class="btn">
                        üì¶ Buat Pesanan
                    </button>
                </form>
            </div>

            <div class="orders-section">
                <div class="section-header">
                    <span>üìã</span>
                    <span>Daftar Pesanan</span>
                </div>
                
                <div class="stats">
                    <div class="stat-card">
                        <div class="stat-number" id="totalOrders">0</div>
                        <div class="stat-label">Total Pesanan</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="pendingOrders">0</div>
                        <div class="stat-label">Menunggu</div>
                    </div>
                </div>
                
                <div id="ordersList">
                    <div style="text-align: center; color: #666; padding: 20px;">
                        Belum ada pesanan. Buat pesanan pertama Anda!
                    </div>
                </div>
            </div>

            <div class="whatsapp-section">
                <h3>üöÄ Integrasi WhatsApp</h3>
                <p>Kirim notifikasi pesanan langsung ke WhatsApp customer</p>
                
                <div style="margin: 20px 0;">
                    <button class="wa-btn" onclick="sendToCustomer()">
                        üì± Kirim ke Customer
                    </button>
                    <button class="wa-btn" onclick="sendToDriver()">
                        üöö Kirim ke Driver
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let orders = [];
        let orderCounter = 1000;

        function generateOrderId() {
            return 'PKT' + (++orderCounter);
        }

        function formatPhoneNumber(phone) {
            // Remove all non-numeric characters
            phone = phone.replace(/\D/g, '');
            
            // Add country code if not present
            if (phone.startsWith('0')) {
                phone = '62' + phone.substring(1);
            } else if (!phone.startsWith('62')) {
                phone = '62' + phone;
            }
            
            return phone;
        }

        function createWhatsAppMessage(order, type = 'customer') {
            const messages = {
                customer: `üéâ *PESANAN PAKET BARU*

üìã *Detail Pesanan:*
‚Ä¢ ID Pesanan: ${order.id}
‚Ä¢ Dari: ${order.senderName}
‚Ä¢ Untuk: ${order.recipientName}
‚Ä¢ Jenis: ${order.packageType}

üìç *Alamat:*
‚Ä¢ Penjemputan: ${order.pickupAddress}
‚Ä¢ Tujuan: ${order.deliveryAddress}

üìû *Kontak:*
‚Ä¢ Pengirim: ${order.senderPhone}
‚Ä¢ Penerima: ${order.recipientPhone}

‚è∞ Status: Menunggu Penjemputan

${order.notes ? 'üìù Catatan: ' + order.notes : ''}

Terima kasih telah menggunakan layanan kami! üôè`,

                driver: `üöö *PESANAN BARU UNTUK DIAMBIL*

üìã *ID Pesanan:* ${order.id}

üë§ *Pengirim:*
‚Ä¢ Nama: ${order.senderName}
‚Ä¢ HP: ${order.senderPhone}
‚Ä¢ Alamat: ${order.pickupAddress}

üë§ *Penerima:*
‚Ä¢ Nama: ${order.recipientName}
‚Ä¢ HP: ${order.recipientPhone}
‚Ä¢ Alamat: ${order.deliveryAddress}

üì¶ *Jenis Paket:* ${order.packageType}

${order.notes ? 'üìù *Catatan:* ' + order.notes : ''}

Silakan ambil paket secepatnya! üöÄ`
            };

            return encodeURIComponent(messages[type]);
        }

        function sendToWhatsApp(phone, message) {
            const formattedPhone = formatPhoneNumber(phone);
            const whatsappUrl = `https://wa.me/${formattedPhone}?text=${message}`;
            window.open(whatsappUrl, '_blank');
        }

        function sendToCustomer() {
            if (orders.length === 0) {
                alert('Belum ada pesanan untuk dikirim!');
                return;
            }

            const latestOrder = orders[orders.length - 1];
            const message = createWhatsAppMessage(latestOrder, 'customer');
            sendToWhatsApp(latestOrder.recipientPhone, message);
        }

        function sendToDriver() {
            if (orders.length === 0) {
                alert('Belum ada pesanan untuk dikirim!');
                return;
            }

            // For demo purposes, using a default driver number
            // In real implementation, you'd have a driver selection system
            const driverPhone = '6281234567890'; // Replace with actual driver phone
            const latestOrder = orders[orders.length - 1];
            const message = createWhatsAppMessage(latestOrder, 'driver');
            sendToWhatsApp(driverPhone, message);
        }

        function updateStats() {
            document.getElementById('totalOrders').textContent = orders.length;
            document.getElementById('pendingOrders').textContent = 
                orders.filter(order => order.status === 'pending').length;
        }

        function renderOrders() {
            const ordersList = document.getElementById('ordersList');
            
            if (orders.length === 0) {
                ordersList.innerHTML = `
                    <div style="text-align: center; color: #666; padding: 20px;">
                        Belum ada pesanan. Buat pesanan pertama Anda!
                    </div>
                `;
                return;
            }

            ordersList.innerHTML = orders.map(order => `
                <div class="order-item">
                    <div class="order-header">
                        <span class="order-id">${order.id}</span>
                        <span class="status ${order.status}">${getStatusText(order.status)}</span>
                    </div>
                    <div class="order-details">
                        <strong>Dari:</strong> ${order.senderName} (${order.senderPhone})<br>
                        <strong>Ke:</strong> ${order.recipientName} (${order.recipientPhone})<br>
                        <strong>Jenis:</strong> ${order.packageType}<br>
                        <strong>Penjemputan:</strong> ${order.pickupAddress}<br>
                        <strong>Tujuan:</strong> ${order.deliveryAddress}
                        ${order.notes ? '<br><strong>Catatan:</strong> ' + order.notes : ''}
                    </div>
                </div>
            `).join('');
        }

        function getStatusText(status) {
            const statusMap = {
                'pending': 'Menunggu',
                'pickup': 'Diambil',
                'delivered': 'Terkirim'
            };
            return statusMap[status] || status;
        }

        document.getElementById('orderForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const order = {
                id: generateOrderId(),
                senderName: formData.get('senderName') || document.getElementById('senderName').value,
                senderPhone: formData.get('senderPhone') || document.getElementById('senderPhone').value,
                recipientName: formData.get('recipientName') || document.getElementById('recipientName').value,
                recipientPhone: formData.get('recipientPhone') || document.getElementById('recipientPhone').value,
                pickupAddress: formData.get('pickupAddress') || document.getElementById('pickupAddress').value,
                deliveryAddress: formData.get('deliveryAddress') || document.getElementById('deliveryAddress').value,
                packageType: formData.get('packageType') || document.getElementById('packageType').value,
                notes: formData.get('notes') || document.getElementById('notes').value,
                status: 'pending',
                createdAt: new Date().toISOString()
            };

            orders.push(order);
            renderOrders();
            updateStats();
            
            // Reset form
            e.target.reset();
            
            // Show success message
            alert(`Pesanan ${order.id} berhasil dibuat! üéâ`);
            
            // Auto send to customer WhatsApp
            setTimeout(() => {
                if (confirm('Kirim notifikasi ke customer via WhatsApp?')) {
                    const message = createWhatsAppMessage(order, 'customer');
                    sendToWhatsApp(order.recipientPhone, message);
                }
            }, 500);
        });

        // Initialize
        updateStats();
        renderOrders();
    </script>
</body>
</html>
